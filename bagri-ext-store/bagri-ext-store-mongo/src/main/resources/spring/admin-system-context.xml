<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:hz="http://www.hazelcast.com/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.hazelcast.com/schema/spring http://www.hazelcast.com/schema/spring/hazelcast-spring-3.6.xsd">

    <!-- Beans Declarations -->
    
    <context:property-placeholder location="file:${xdm.config.path}/admin.properties" />
    <context:annotation-config />

    <bean id="mbeanServer" class="java.lang.management.ManagementFactory" factory-method="getPlatformMBeanServer"/>
    <context:mbean-export server="mbeanServer" default-domain="com.bagri.xdm"/>
    
	<bean id="authManager" class="com.bagri.xdm.cache.hazelcast.security.BagriJMXAuthenticator">
		<property name="userManager" ref="userService"/>
	</bean>

	<hz:hazelcast id="hzInstance">
		<hz:config>
			<hz:spring-aware/>
			<hz:instance-name>hzInstance</hz:instance-name>
			<hz:group name="system" password="syspwd"/>
			<hz:management-center url="http://localhost:8080/mancenter" enabled="false"/>
			<hz:properties>
				<hz:property name="hazelcast.jmx">true</hz:property>
				<hz:property name="hazelcast.jmx.detailed">true</hz:property>
				<hz:property name="hazelcast.logging.type">slf4j</hz:property>
				<hz:property name="hazelcast.rest.enabled">false</hz:property>
				<hz:property name="hazelcast.memcache.enabled">false</hz:property>
			</hz:properties>
			<hz:network port="${xdm.cluster.port:3331}" port-auto-increment="true">
				<hz:join>
					<hz:multicast enabled="false"/>
					<hz:tcp-ip enabled="true" connection-timeout-seconds="10">
						<hz:members>${xdm.cluster.members:localhost}</hz:members>
					</hz:tcp-ip>
				</hz:join>
			</hz:network>

			<hz:executor-service name="sys-exec-pool" pool-size="${xdm.cluster.thread.pool:8}" />

			<hz:map name="formats">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="dataFormatCacheStore"/>
			</hz:map>

			<hz:map name="stores">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="dataStoreCacheStore"/>
			</hz:map>

			<hz:map name="modules">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="moduleCacheStore"/>
			</hz:map>

			<hz:map name="libraries">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="libraryCacheStore"/>
			</hz:map>

			<hz:map name="nodes">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="nodeCacheStore"/>
			</hz:map>
			
			<hz:map name="schemas">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="schemaCacheStore"/>
			</hz:map>

			<hz:map name="roles">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="roleCacheStore"/>
			</hz:map>
			
			<hz:map name="users">
				<hz:map-store enabled="true" write-delay-seconds="10" initial-mode="EAGER" implementation="userCacheStore"/>
			</hz:map>
			
			<hz:serialization>
				<hz:data-serializable-factories>
					<hz:data-serializable-factory factory-id="1" class-name="com.bagri.xdm.cache.hazelcast.serialize.DataSerializationFactoryImpl"/>
				</hz:data-serializable-factories>
				<!--hz:portable-factories>
					<hz:portable-factory factory-id="1" class-name="com.bagri.xdm.process.hazelcast.pof.XDMPortableFactory"/>
				</hz:portable-factories-->
				<hz:serializers>
					<hz:serializer type-class="com.bagri.xdm.system.DataType" class-name="com.bagri.xdm.client.hazelcast.serialize.system.DataTypeSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Module" class-name="com.bagri.xdm.client.hazelcast.serialize.system.ModuleSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Library" class-name="com.bagri.xdm.client.hazelcast.serialize.system.LibrarySerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Function" class-name="com.bagri.xdm.client.hazelcast.serialize.system.FunctionSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Parameter" class-name="com.bagri.xdm.client.hazelcast.serialize.system.ParameterSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Node" class-name="com.bagri.xdm.client.hazelcast.serialize.system.NodeSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Schema" class-name="com.bagri.xdm.client.hazelcast.serialize.system.SchemaSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Collection" class-name="com.bagri.xdm.client.hazelcast.serialize.system.CollectionSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Fragment" class-name="com.bagri.xdm.client.hazelcast.serialize.system.FragmentSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Index" class-name="com.bagri.xdm.client.hazelcast.serialize.system.IndexSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Role" class-name="com.bagri.xdm.client.hazelcast.serialize.system.RoleSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.User" class-name="com.bagri.xdm.client.hazelcast.serialize.system.UserSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.Permission" class-name="com.bagri.xdm.client.hazelcast.serialize.system.PermissionSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.TriggerAction" class-name="com.bagri.xdm.client.hazelcast.serialize.system.TriggerActionSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.JavaTrigger" class-name="com.bagri.xdm.client.hazelcast.serialize.system.JavaTriggerSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.XQueryTrigger" class-name="com.bagri.xdm.client.hazelcast.serialize.system.XQueryTriggerSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.DataFormat" class-name="com.bagri.xdm.client.hazelcast.serialize.system.DataFormatSerializer"/>
					<hz:serializer type-class="com.bagri.xdm.system.DataStore" class-name="com.bagri.xdm.client.hazelcast.serialize.system.DataStoreSerializer"/>
				</hz:serializers>
			</hz:serialization>
			<hz:member-attributes>
				<hz:attribute name="xdm.cluster.login">${xdm.cluster.login:admin}</hz:attribute>
				<hz:attribute name="xdm.cluster.admin.port">${xdm.cluster.admin.port:3330}</hz:attribute>
				<hz:attribute name="xdm.cluster.node.name">${xdm.cluster.node.name:admin}</hz:attribute>
				<hz:attribute name="xdm.cluster.node.role">admin</hz:attribute>
				<hz:attribute name="xdm.cluster.node.schemas">${xdm.cluster.node.schemas:}</hz:attribute>
			</hz:member-attributes>
		</hz:config>
	</hz:hazelcast>

	<hz:map id="formats" name="formats" instance-ref="hzInstance"/>
	<hz:map id="stores" name="stores" instance-ref="hzInstance"/>
	<hz:map id="modules" name="modules" instance-ref="hzInstance"/>
	<hz:map id="libraries" name="libraries" instance-ref="hzInstance"/>
	<hz:map id="nodes" name="nodes" instance-ref="hzInstance"/>
	<hz:map id="schemas" name="schemas" instance-ref="hzInstance"/>
	<hz:map id="roles" name="roles" instance-ref="hzInstance"/>
	<hz:map id="users" name="users" instance-ref="hzInstance"/>

	<hz:executorService id="sys-exec-pool" name="sys-exec-pool" instance-ref="hzInstance"/>

	<bean id="configService" class="com.bagri.xdm.cache.hazelcast.config.SystemConfig">
		<constructor-arg value="${xdm.config.filename}" />
	</bean>

	<bean id="moduleCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.ModuleCacheStore">
		<property name="entityManagement" ref="configService"/>
	</bean>

	<bean id="libraryCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.LibraryCacheStore">
		<property name="entityManagement" ref="configService"/>
	</bean>

	<bean id="schemaCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.SchemaCacheStore">
		<property name="entityManagement" ref="configService"/>
	</bean>

	<bean id="nodeCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.NodeCacheStore">
		<property name="entityManagement" ref="configService"/>
	</bean>

	<bean id="dataFormatCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.DataFormatCacheStore">
		<property name="entityManagement" ref="configService"/>
	</bean>

	<bean id="dataStoreCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.DataStoreCacheStore">
		<property name="entityManagement" ref="configService"/>
	</bean>

	<bean id="accessService" class="com.bagri.xdm.cache.hazelcast.config.AccessConfig">
		<constructor-arg value="${xdm.access.filename}" />
	</bean>

	<bean id="roleCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.RoleCacheStore">
		<property name="entityManagement" ref="accessService"/>
	</bean>

	<bean id="userCacheStore" class="com.bagri.xdm.cache.hazelcast.store.system.UserCacheStore">
		<property name="entityManagement" ref="accessService"/>
	</bean>

	<bean id="xqCompiler" class="com.bagri.xquery.saxon.XQCompilerImpl"/>

	<bean id="dataFormatService" class="com.bagri.xdm.cache.hazelcast.management.DataFormatManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="formats"/>
	</bean>

	<bean id="dataStoreService" class="com.bagri.xdm.cache.hazelcast.management.DataStoreManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="stores"/>
	</bean>

	<bean id="moduleService" class="com.bagri.xdm.cache.hazelcast.management.ModuleManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="modules"/>
		<property name="XQCompiler" ref="xqCompiler"/>
	</bean>

	<bean id="libraryService" class="com.bagri.xdm.cache.hazelcast.management.LibraryManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="libraries"/>
		<property name="XQCompiler" ref="xqCompiler"/>
	</bean>

	<bean id="clusterService" class="com.bagri.xdm.cache.hazelcast.management.ClusterManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="nodes"/>
	</bean>

	<bean id="schemaService" class="com.bagri.xdm.cache.hazelcast.management.SchemaManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="schemas"/>
		<property name="clusterService" ref="clusterService"/>
		<property name="execService" ref="sys-exec-pool"/>
		<property name="userService" ref="userService"/>
		<property name="defaultProperties">
			<props>
				<prop key="xdm.schema.password"></prop>
				<!--prop key="xdm.schema.members">${xdm.schema.default.members}</prop-->
				<prop key="xdm.schema.ports.first">${xdm.schema.default.ports.first}</prop>
				<prop key="xdm.schema.ports.last">${xdm.schema.default.ports.last}</prop>
				<prop key="xdm.schema.thread.pool">${xdm.schema.default.thread.pool}</prop>
				<prop key="xdm.schema.store.type">${xdm.schema.default.store.type}</prop>
				<prop key="xdm.schema.store.tx.buffer.size">${xdm.schema.default.store.tx.buffer.size}</prop>
				<prop key="xdm.schema.buffer.size">${xdm.schema.default.buffer.size}</prop>
				<prop key="xdm.schema.partition.count">${xdm.schema.default.partition.count}</prop>
				<prop key="xdm.schema.population.size">${xdm.schema.default.population.size}</prop>
				<prop key="xdm.schema.population.buffer.size">${xdm.schema.default.population.buffer.size}</prop>
				<prop key="xdm.schema.transaction.timeout">${xdm.schema.default.transaction.timeout}</prop>
			</props>
		</property>
	</bean>

	<bean id="topService" class="com.bagri.xdm.cache.hazelcast.management.TopologyManagement">
		<constructor-arg ref="hzInstance" />
		<property name="execService" ref="sys-exec-pool"/>
	</bean>

	<bean id="roleService" class="com.bagri.xdm.cache.hazelcast.management.RoleManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="roles"/>
	</bean>

	<bean id="userService" class="com.bagri.xdm.cache.hazelcast.management.UserManagement">
		<constructor-arg ref="hzInstance" />
		<property name="entityCache" ref="users"/>
	</bean>

</beans>
